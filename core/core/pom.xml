<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>net.imagej</groupId>
		<artifactId>pom-ij-core</artifactId>
		<version>2.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>ij-core</artifactId>

	<name>ImageJ Core Classes</name>
	<description>The ImageJ core classes include the services framework with some basic services: an event service, which uses a publish/subscribe messaging pattern to manage events, which reduces direct dependencies between components; an object service, for keeping track of registered objects sorted by type; and a thread service, for managing running threads. This component also includes some basic utility classes.

The core component also includes ImageJ's framework for extensibility, which allows for the definition of ImageJ modules, plugins and tools. A module is a discrete piece of functionality with typed inputs and outputs. Plugins, scripts and workflows are all types of modules. A plugin is a piece of code that enables functionality (such as an image processing algorithm) within the program. A tool is a piece of code that defines user input behavior, such as drawing on the image with a pencil, or panning the display by dragging. The extensibility framework also provides a central discovery mechanism for plugins and tools, which allows ImageJ extensions to be loaded dynamically.</description>

	<dependencies>
		<dependency>
			<groupId>net.java.sezpoz</groupId>
			<artifactId>sezpoz</artifactId>
			<version>${sezpoz.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bushe</groupId>
			<artifactId>eventbus</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.10</version>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.5.10</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<properties>
		<project.rootdir>${basedir}/../..</project.rootdir>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<packageName>imagej</packageName>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>tools-jar</id> <!-- required for the sezpoz checker test -->
			<activation>
				<file>
					<!-- NB: Custom properties do not work here, so we hardcode. -->
					<exists>${java.home}/../lib/tools.jar</exists>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
					<version>1.4.2</version>
					<scope>system</scope>
					<systemPath>${java.home}/../lib/tools.jar</systemPath>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<!-- NB: for project parent, in case of partial checkout -->
	<repositories>
		<repository>
			<id>imagej.releases</id>
			<url>http://maven.imagej.net/content/repositories/releases</url>
		</repository>
		<repository>
			<id>imagej.snapshots</id>
			<url>http://maven.imagej.net/content/repositories/snapshots</url>
		</repository>
	</repositories>

</project>
